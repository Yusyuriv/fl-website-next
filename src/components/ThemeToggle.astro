---
import IconMoon from "@/components/icons/Moon.svg";
import IconSun from "@/components/icons/Sun.svg";
---

<button id="theme-toggle-button">
  <IconMoon data-moon />
  <IconSun data-sun />
</button>

<style>
#theme-toggle-button {
    font-size: 20px;
    width: 36px;
    aspect-ratio: 1;
    padding: 0;
    border: none;
    border-radius: 50%;
    line-height: 1;
    background-color: var(--theme-toggle-button);
    color: var(--theme-toggle-button-icon);
    transition: background-color 0.2s, color 0.2s;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

#theme-toggle-button:hover {
    background-color: var(--theme-toggle-button-hover);
}

#theme-toggle-button:active {
    background-color: var(--theme-toggle-button-active);
}

#theme-toggle-button svg {
    display: none;
    width: calc(100% - 12px);
    aspect-ratio: 1;
}
</style>

<script>
const button = document.getElementById("theme-toggle-button") as HTMLButtonElement;
const moon = button.querySelector("[data-moon]") as SVGSVGElement;
const sun = button.querySelector("[data-sun]") as SVGSVGElement;

function setTheme(theme: string): void {
  document.documentElement.setAttribute("data-theme", theme);
  localStorage.setItem("theme", theme);
  const isDark = theme === "dark";
  moon.style.display = isDark ? "block" : "none";
  sun.style.display = isDark ? "none" : "block";
}

function toggleTheme(): void {
  const currentTheme = document.documentElement.getAttribute("data-theme");
  const newTheme = currentTheme === "light" ? "dark" : "light";
  setTheme(newTheme);
}

if (import.meta.env.SSR === false) {
  const storedTheme = localStorage.getItem("theme");
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)");

  if (storedTheme) {
    setTheme(storedTheme);
  } else {
    setTheme(prefersDark.matches ? "dark" : "light");
  }

  button.addEventListener("click", toggleTheme);
}

setTimeout(() => {
  document.documentElement.classList.remove("no-transition");
}, 100);
</script>
